type User {
  id: ID
  email: String
  password: String,
}

type CreateUserRes {
  user: User
  success: Boolean!
  message: String!
}

type LoginRes {
  token: String
  user: User
  success: Boolean!
  message: String!
}

type Add2FARes {
  code: String
  success: Boolean!
  message: String!
}

type Query {
  user(id: ID!): User!
}

input UserInput {
  email: String!
  password: String!
}

type Mutation {
  registration(email: String!, password: String): CreateUserRes!
  login(email: String!, password: String!, qrCodeKey: String): LoginRes!
  resetPassword(email: String!, oldPassword: String!, newPassword: String!): CreateUserRes!
  add2FA(email: String!): Add2FARes!
}
